<?xml version = "1.0" encoding = "UTF-8"?>

<beans xmlns = "http://www.springframework.org/schema/beans"
       xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context = "http://www.springframework.org/schema/context"
       xmlns:aop = "http://www.springframework.org/schema/aop"
       xsi:schemaLocation = "http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://springframework.org/schema/aop/spring-aop-3.0.xsd"
       default-init-method="init" default-destroy-method="destroy">

    <context:annotation-config/>

    <aop:config>
        <aop:aspect id="perfMon" ref="auditService">
            <aop:pointcut id="sendEmail" expression="execution(* com.mphasis.main.*.sendMessage(..))"/>
                <aop:before pointcut-ref="sendEmail" method="beforeAdvice"/>
                <aop:after pointcut-ref="sendEmail" method="afterAdvice"/>
                <aop:after-returning pointcut-ref="sendEmail"  returning="returnValue" method="afterReturnAdvice"/>
        </aop:aspect>
    </aop:config>

    <bean id="auditService" class="com.mphasis.utils.Audit"/>

    <bean id="email" class="com.mphasis.main.EmailService" scope = "prototype" init-method="initEmailService" destroy-method="destroyingEmailService">
<!--        prototype means created on demand-->
        <property name="port" value="4567"/>
    </bean>

    <bean id="twitter" class="com.mphasis.main.Twitter" lazy-init="true" init-method="initTwitterService" destroy-method="destroyingTwitterService">
<!--        singleton but lazy initialization-->
    </bean>

    <bean id="textEditor" class = "com.mphasis.main.TextEditor">
<!--        <property name="spellChecker" ref="spellChecker"/>-->
<!--        <constructor-arg ref ="spellChecker"/>-->
    </bean>
    <bean id="spellChecker" name="spellingCheck" class="com.mphasis.main.SpellChecker"/>

    <bean id = "javaCollection" class = "com.mphasis.main.JavaCollection">

        <!-- results in a setAddressList(java.util.List) call -->
        <property name = "addressList">
            <list>
                <value>INDIA</value>
                <value>Pakistan</value>
                <value>USA</value>
                <value>USA</value>
            </list>
        </property>

        <!-- results in a setAddressSet(java.util.Set) call -->
        <property name = "addressSet">
            <set>
                <value>INDIA</value>
                <value>Pakistan</value>
                <value>USA</value>
                <value>USA</value>
            </set>
        </property>

        <!-- results in a setAddressMap(java.util.Map) call -->
        <property name = "addressMap">
            <map>
                <entry key = "1" value = "INDIA"/>
                <entry key = "2" value = "Pakistan"/>
                <entry key = "3" value = "USA"/>
                <entry key = "4" value = "USA"/>
            </map>
        </property>

        <!-- results in a setAddressProp(java.util.Properties) call -->
        <property name = "addressProp">
            <props>
                <prop key = "one">INDIA</prop>
                <prop key = "one">INDIA</prop>
                <prop key = "two">Pakistan</prop>
                <prop key = "three">USA</prop>
                <prop key = "four">USA</prop>
            </props>
        </property>
    </bean>



</beans>